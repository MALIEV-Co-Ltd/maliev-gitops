name: GitOps Validation

on:
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Lint and Static Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Lint YAML files
        uses: ibiqlik/action-yamllint@v3
        with:
          file_or_dir: .
          config_file: .yamllint.yml

      - name: Check Kubernetes best practices (cluster-infra)
        uses: stackrox/kube-linter-action@v1
        with:
          config: .kube-linter.yml
          directory: 1-cluster-infra
          format: sarif
          output-file: kube-linter-cluster-infra.sarif
        continue-on-error: true

      - name: Ensure cluster-infra SARIF exists
        run: |
          [ -f kube-linter-cluster-infra.sarif ] || echo '{"runs":[]}' > kube-linter-cluster-infra.sarif

      - name: Check Kubernetes best practices (environments)
        uses: stackrox/kube-linter-action@v1
        with:
          config: .kube-linter.yml
          directory: 2-environments
          format: sarif
          output-file: kube-linter-environments.sarif
        continue-on-error: true

      - name: Ensure environments SARIF exists
        run: |
          [ -f kube-linter-environments.sarif ] || echo '{"runs":[]}' > kube-linter-environments.sarif

      - name: Check Kubernetes best practices (apps)
        uses: stackrox/kube-linter-action@v1
        with:
          config: .kube-linter.yml
          directory: 3-apps
          format: sarif
          output-file: kube-linter-apps.sarif
        continue-on-error: true

      - name: Ensure apps SARIF exists
        run: |
          [ -f kube-linter-apps.sarif ] || echo '{"runs":[]}' > kube-linter-apps.sarif

      - name: Upload SARIF (cluster-infra)
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: kube-linter-cluster-infra.sarif

      - name: Upload SARIF (environments)
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: kube-linter-environments.sarif

      - name: Upload SARIF (apps)
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: kube-linter-apps.sarif

  validate:
    name: Kustomize and Structure Validation
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install kustomize
        run: |-
          set -e
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
          sudo mv kustomize /usr/local/bin/
          kustomize version

      - name: Validate Kustomize overlays
        run: |
          set -e
          found=0
          while IFS= read -r -d $'\0' file; do
            dir=$(dirname "$file")
            echo "Validating kustomization in $dir"
            if ! kustomize build "$dir" > /dev/null; then
              echo "kustomize build failed for $dir"
              found=1
            fi
          done < <(find 3-apps -name kustomization.yaml -print0)
          if [ "$found" -ne 0 ]; then
            exit 1
          fi

      - name: Check for native Secrets
        run: |
          if grep -R --line-number --no-color "kind:[[:space:]]*Secret" .; then
            echo "Error: Native Kubernetes Secrets are not allowed. Please use ExternalSecrets."
            exit 1
          else
            echo "No native Secret resources found."
          fi

      - name: Validate repository structure
        run: |
          set -e
          for app in 3-apps/*; do
            if [ -d "$app" ]; then
              if [ ! -d "$app/base" ] || [ ! -d "$app/overlays" ]; then
                echo "Error: $app must have a 'base' and 'overlays' directory."
                exit 1
              fi
              if [ ! -d "$app/overlays/development" ] || [ ! -d "$app/overlays/staging" ] || [ ! -d "$app/overlays/production" ]; then
                echo "Error: $app must have 'development', 'staging', and 'production' overlays."
                exit 1
              fi
            fi
          done
          echo "Repository structure validated."

      - name: Validate ArgoCD Application paths
        run: |
          echo "Placeholder: Validation of ArgoCD Application paths would be implemented here."
