# Secret Templates for Maliev GitOps
# These templates can be customized and applied for additional services

# =============================================================================
# Template 1: Service-Specific Database Connection
# Use this template for services that need their own database connection
# =============================================================================

apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: {environment}-{service-name}-db
  namespace: maliev-{environment}
spec:
  secretStoreRef:
    name: gcp-secret-manager
    kind: ClusterSecretStore
  target:
    name: {service-name}-db-conn
  data:
  - secretKey: connection-string
    remoteRef:
      key: maliev-{environment}-{service-name}-db-conn

# Example usage for Currency Service:
# Replace {environment} with: dev, staging, prod
# Replace {service-name} with: currency-service
# GCP Secret Manager key: maliev-dev-currency-service-db-conn

---

# =============================================================================
# Template 2: Multi-Database Service (like Auth Service)  
# Use this for services that connect to multiple databases
# =============================================================================

apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: {environment}-{service-name}-multi-db
  namespace: maliev-{environment}
spec:
  secretStoreRef:
    name: gcp-secret-manager
    kind: ClusterSecretStore
  target:
    name: {service-name}-db-conn
  data:
  - secretKey: {database1-name}
    remoteRef:
      key: maliev-{environment}-{service-name}-{database1-name}-db-conn
  - secretKey: {database2-name}
    remoteRef:
      key: maliev-{environment}-{service-name}-{database2-name}-db-conn

# Example usage for Employee Service with customer/employee databases:
# Replace {environment} with: dev, staging, prod
# Replace {service-name} with: employee-service  
# Replace {database1-name} with: customer
# Replace {database2-name} with: employee
# GCP Secret Manager keys:
#   - maliev-dev-employee-service-customer-db-conn
#   - maliev-dev-employee-service-employee-db-conn

---

# =============================================================================
# Template 3: Service-Specific API Configuration
# Use this for services that need external API credentials
# =============================================================================

apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: {environment}-{service-name}-service
  namespace: maliev-{environment}
spec:
  secretStoreRef:
    name: gcp-secret-manager
    kind: ClusterSecretStore
  target:
    name: {service-name}-service-secrets
  dataFrom:
  - extract:
      key: maliev-{environment}-{service-name}-service-config

# Example usage for Payment Service with Stripe/PayPal:
# Replace {environment} with: dev, staging, prod
# Replace {service-name} with: payment-service
# GCP Secret Manager key: maliev-dev-payment-service-service-config
# Secret content (JSON format):
# {
#   "STRIPE_API_KEY": "sk_test_...",
#   "STRIPE_WEBHOOK_SECRET": "whsec_...",
#   "PAYPAL_CLIENT_ID": "...",
#   "PAYPAL_CLIENT_SECRET": "..."
# }

---

# =============================================================================
# Template 4: Shared Service Configuration (like Redis/Cache)
# Use this for shared infrastructure secrets
# =============================================================================

apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: {environment}-shared-{service-type}
  namespace: maliev-{environment}
spec:
  secretStoreRef:
    name: gcp-secret-manager
    kind: ClusterSecretStore
  target:
    name: {service-type}-conn
  data:
  - secretKey: connection-string
    remoteRef:
      key: maliev-{environment}-shared-{service-type}-conn

# Example usage for Redis:
# Replace {environment} with: dev, staging, prod  
# Replace {service-type} with: redis
# GCP Secret Manager key: maliev-dev-shared-redis-conn

---

# =============================================================================
# Quick Reference for Applying Templates
# =============================================================================

# Step 1: Choose the appropriate template above
# Step 2: Replace all {placeholders} with actual values
# Step 3: Create the corresponding secret in Google Secret Manager
# Step 4: Add the configured ExternalSecret to the environment secrets.yaml file
# Step 5: Commit and let ArgoCD sync the changes

# =============================================================================
# Common Services That Need ExternalSecrets (TODO)
# =============================================================================

# Single Database Services:
# - currency-service-db-conn
# - customer-service-db-conn  
# - employee-service-db-conn
# - invoice-service-db-conn
# - career-service-db-conn
# - material-service-db-conn
# - message-service-db-conn
# - order-service-db-conn
# - orderstatus-service-db-conn
# - payment-service-db-conn
# - pdf-service-db-conn
# - prediction-service-db-conn
# - purchaseorder-service-db-conn
# - quotation-service-db-conn
# - quotationrequest-service-db-conn
# - receipt-service-db-conn
# - supplier-service-db-conn
# - upload-service-db-conn

# API Configuration Services:
# - payment-service (Stripe, PayPal)
# - email-service (SendGrid, SMTP)
# - prediction-service (ML APIs)
# - pdf-service (PDF generation APIs)

# Shared Infrastructure:
# - Redis connection strings
# - Message queue connections
# - Shared cache configurations